{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "provenance": [],
      "authorship_tag": "ABX9TyOsP/YozgfwL0t8M68KcwCj",
      "include_colab_link": true
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    },
    "language_info": {
      "name": "python"
    }
  },
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/vanessa-shinta/Pengolahan-dataset-Kaggle/blob/main/pengolahan_dataset\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "rHfLxFOw35FG"
      },
      "outputs": [],
      "source": [
        "import pandas as pd\n"
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "datauas = pd.read_csv('/content/Political Polarization in US Congress (Assorted).csv')\n",
        "datauas.head()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 299
        },
        "id": "R6CHFLA955Ff",
        "outputId": "3c2b57a7-3ad1-4c87-9659-6d401120ec1b"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "  chamber  congress  year  party.mean.diff.d1  prop.moderate.d1  \\\n",
              "0   House        46  1879            0.785883          0.130435   \n",
              "1  Senate        46  1879            0.747943          0.160494   \n",
              "2   House        47  1881            0.782714          0.100324   \n",
              "3  Senate        47  1881            0.763571          0.141176   \n",
              "4   House        48  1883            0.724404          0.216374   \n",
              "\n",
              "   prop.moderate.dem.d1  prop.moderate.rep.d1  overlap  chamber.mean.d1  \\\n",
              "0              0.110345              0.066667      0.0        -0.018943   \n",
              "1              0.000000              0.342857      0.0        -0.124568   \n",
              "2              0.110294              0.025157      0.0         0.026343   \n",
              "3              0.000000              0.244444      0.0        -0.030047   \n",
              "4              0.275862              0.096000      0.0        -0.066354   \n",
              "\n",
              "   chamber.mean.d2  ...  rep.mean.d1  rep.mean.d2  north.rep.mean.d1  \\\n",
              "0        -0.043084  ...     0.394896    -0.128074           0.398015   \n",
              "1        -0.077630  ...     0.295343    -0.027171           0.296303   \n",
              "2        -0.025706  ...     0.387736    -0.050755           0.391087   \n",
              "3        -0.080929  ...     0.314756    -0.113044           0.316341   \n",
              "4        -0.029848  ...     0.377488     0.001824           0.384009   \n",
              "\n",
              "   north.rep.mean.d2  south.rep.mean.d1  south.rep.mean.d2  north.dem.mean.d1  \\\n",
              "0          -0.127235           0.257667          -0.165000          -0.343253   \n",
              "1          -0.079273           0.279500           0.832500          -0.455136   \n",
              "2          -0.042993           0.331889          -0.180111          -0.332643   \n",
              "3          -0.132182           0.245000           0.729000          -0.455118   \n",
              "4           0.009155           0.293444          -0.092667          -0.281450   \n",
              "\n",
              "   north.dem.mean.d2  south.dem.mean.d1  south.dem.mean.d2  \n",
              "0          -0.063924          -0.448121          -0.031894  \n",
              "1          -0.263591          -0.450174           0.023696  \n",
              "2          -0.058429          -0.461091          -0.078530  \n",
              "3          -0.199059          -0.443714           0.065667  \n",
              "4          -0.008705          -0.461041          -0.129784  \n",
              "\n",
              "[5 rows x 22 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-fb53bcc2-8e9d-43ef-aeb7-d41967126ab9\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>chamber</th>\n",
              "      <th>congress</th>\n",
              "      <th>year</th>\n",
              "      <th>party.mean.diff.d1</th>\n",
              "      <th>prop.moderate.d1</th>\n",
              "      <th>prop.moderate.dem.d1</th>\n",
              "      <th>prop.moderate.rep.d1</th>\n",
              "      <th>overlap</th>\n",
              "      <th>chamber.mean.d1</th>\n",
              "      <th>chamber.mean.d2</th>\n",
              "      <th>...</th>\n",
              "      <th>rep.mean.d1</th>\n",
              "      <th>rep.mean.d2</th>\n",
              "      <th>north.rep.mean.d1</th>\n",
              "      <th>north.rep.mean.d2</th>\n",
              "      <th>south.rep.mean.d1</th>\n",
              "      <th>south.rep.mean.d2</th>\n",
              "      <th>north.dem.mean.d1</th>\n",
              "      <th>north.dem.mean.d2</th>\n",
              "      <th>south.dem.mean.d1</th>\n",
              "      <th>south.dem.mean.d2</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>House</td>\n",
              "      <td>46</td>\n",
              "      <td>1879</td>\n",
              "      <td>0.785883</td>\n",
              "      <td>0.130435</td>\n",
              "      <td>0.110345</td>\n",
              "      <td>0.066667</td>\n",
              "      <td>0.0</td>\n",
              "      <td>-0.018943</td>\n",
              "      <td>-0.043084</td>\n",
              "      <td>...</td>\n",
              "      <td>0.394896</td>\n",
              "      <td>-0.128074</td>\n",
              "      <td>0.398015</td>\n",
              "      <td>-0.127235</td>\n",
              "      <td>0.257667</td>\n",
              "      <td>-0.165000</td>\n",
              "      <td>-0.343253</td>\n",
              "      <td>-0.063924</td>\n",
              "      <td>-0.448121</td>\n",
              "      <td>-0.031894</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>Senate</td>\n",
              "      <td>46</td>\n",
              "      <td>1879</td>\n",
              "      <td>0.747943</td>\n",
              "      <td>0.160494</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.342857</td>\n",
              "      <td>0.0</td>\n",
              "      <td>-0.124568</td>\n",
              "      <td>-0.077630</td>\n",
              "      <td>...</td>\n",
              "      <td>0.295343</td>\n",
              "      <td>-0.027171</td>\n",
              "      <td>0.296303</td>\n",
              "      <td>-0.079273</td>\n",
              "      <td>0.279500</td>\n",
              "      <td>0.832500</td>\n",
              "      <td>-0.455136</td>\n",
              "      <td>-0.263591</td>\n",
              "      <td>-0.450174</td>\n",
              "      <td>0.023696</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>House</td>\n",
              "      <td>47</td>\n",
              "      <td>1881</td>\n",
              "      <td>0.782714</td>\n",
              "      <td>0.100324</td>\n",
              "      <td>0.110294</td>\n",
              "      <td>0.025157</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.026343</td>\n",
              "      <td>-0.025706</td>\n",
              "      <td>...</td>\n",
              "      <td>0.387736</td>\n",
              "      <td>-0.050755</td>\n",
              "      <td>0.391087</td>\n",
              "      <td>-0.042993</td>\n",
              "      <td>0.331889</td>\n",
              "      <td>-0.180111</td>\n",
              "      <td>-0.332643</td>\n",
              "      <td>-0.058429</td>\n",
              "      <td>-0.461091</td>\n",
              "      <td>-0.078530</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>Senate</td>\n",
              "      <td>47</td>\n",
              "      <td>1881</td>\n",
              "      <td>0.763571</td>\n",
              "      <td>0.141176</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.244444</td>\n",
              "      <td>0.0</td>\n",
              "      <td>-0.030047</td>\n",
              "      <td>-0.080929</td>\n",
              "      <td>...</td>\n",
              "      <td>0.314756</td>\n",
              "      <td>-0.113044</td>\n",
              "      <td>0.316341</td>\n",
              "      <td>-0.132182</td>\n",
              "      <td>0.245000</td>\n",
              "      <td>0.729000</td>\n",
              "      <td>-0.455118</td>\n",
              "      <td>-0.199059</td>\n",
              "      <td>-0.443714</td>\n",
              "      <td>0.065667</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>House</td>\n",
              "      <td>48</td>\n",
              "      <td>1883</td>\n",
              "      <td>0.724404</td>\n",
              "      <td>0.216374</td>\n",
              "      <td>0.275862</td>\n",
              "      <td>0.096000</td>\n",
              "      <td>0.0</td>\n",
              "      <td>-0.066354</td>\n",
              "      <td>-0.029848</td>\n",
              "      <td>...</td>\n",
              "      <td>0.377488</td>\n",
              "      <td>0.001824</td>\n",
              "      <td>0.384009</td>\n",
              "      <td>0.009155</td>\n",
              "      <td>0.293444</td>\n",
              "      <td>-0.092667</td>\n",
              "      <td>-0.281450</td>\n",
              "      <td>-0.008705</td>\n",
              "      <td>-0.461041</td>\n",
              "      <td>-0.129784</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>5 rows × 22 columns</p>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-fb53bcc2-8e9d-43ef-aeb7-d41967126ab9')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-fb53bcc2-8e9d-43ef-aeb7-d41967126ab9 button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-fb53bcc2-8e9d-43ef-aeb7-d41967126ab9');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 3
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "datauas.dtypes"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "XNK6xr5D6JQP",
        "outputId": "5d50cecf-be78-49cb-cc1c-90e801d39c89"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "chamber                  object\n",
              "congress                  int64\n",
              "year                      int64\n",
              "party.mean.diff.d1      float64\n",
              "prop.moderate.d1        float64\n",
              "prop.moderate.dem.d1    float64\n",
              "prop.moderate.rep.d1    float64\n",
              "overlap                 float64\n",
              "chamber.mean.d1         float64\n",
              "chamber.mean.d2         float64\n",
              "dem.mean.d1             float64\n",
              "dem.mean.d2             float64\n",
              "rep.mean.d1             float64\n",
              "rep.mean.d2             float64\n",
              "north.rep.mean.d1       float64\n",
              "north.rep.mean.d2       float64\n",
              "south.rep.mean.d1       float64\n",
              "south.rep.mean.d2       float64\n",
              "north.dem.mean.d1       float64\n",
              "north.dem.mean.d2       float64\n",
              "south.dem.mean.d1       float64\n",
              "south.dem.mean.d2       float64\n",
              "dtype: object"
            ]
          },
          "metadata": {},
          "execution_count": 4
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "datauas.drop(columns='congress', inplace=True)\n",
        "datauas.head()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 299
        },
        "id": "4PuH7lRY6Vse",
        "outputId": "43b8acb7-0f0c-47c6-fb16-0a35f05923d4"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "  chamber  year  party.mean.diff.d1  prop.moderate.d1  prop.moderate.dem.d1  \\\n",
              "0   House  1879            0.785883          0.130435              0.110345   \n",
              "1  Senate  1879            0.747943          0.160494              0.000000   \n",
              "2   House  1881            0.782714          0.100324              0.110294   \n",
              "3  Senate  1881            0.763571          0.141176              0.000000   \n",
              "4   House  1883            0.724404          0.216374              0.275862   \n",
              "\n",
              "   prop.moderate.rep.d1  overlap  chamber.mean.d1  chamber.mean.d2  \\\n",
              "0              0.066667      0.0        -0.018943        -0.043084   \n",
              "1              0.342857      0.0        -0.124568        -0.077630   \n",
              "2              0.025157      0.0         0.026343        -0.025706   \n",
              "3              0.244444      0.0        -0.030047        -0.080929   \n",
              "4              0.096000      0.0        -0.066354        -0.029848   \n",
              "\n",
              "   dem.mean.d1  ...  rep.mean.d1  rep.mean.d2  north.rep.mean.d1  \\\n",
              "0    -0.390986  ...     0.394896    -0.128074           0.398015   \n",
              "1    -0.452600  ...     0.295343    -0.027171           0.296303   \n",
              "2    -0.394978  ...     0.387736    -0.050755           0.391087   \n",
              "3    -0.448816  ...     0.314756    -0.113044           0.316341   \n",
              "4    -0.346916  ...     0.377488     0.001824           0.384009   \n",
              "\n",
              "   north.rep.mean.d2  south.rep.mean.d1  south.rep.mean.d2  north.dem.mean.d1  \\\n",
              "0          -0.127235           0.257667          -0.165000          -0.343253   \n",
              "1          -0.079273           0.279500           0.832500          -0.455136   \n",
              "2          -0.042993           0.331889          -0.180111          -0.332643   \n",
              "3          -0.132182           0.245000           0.729000          -0.455118   \n",
              "4           0.009155           0.293444          -0.092667          -0.281450   \n",
              "\n",
              "   north.dem.mean.d2  south.dem.mean.d1  south.dem.mean.d2  \n",
              "0          -0.063924          -0.448121          -0.031894  \n",
              "1          -0.263591          -0.450174           0.023696  \n",
              "2          -0.058429          -0.461091          -0.078530  \n",
              "3          -0.199059          -0.443714           0.065667  \n",
              "4          -0.008705          -0.461041          -0.129784  \n",
              "\n",
              "[5 rows x 21 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-ea51ad2d-bfb7-4178-b719-8866c9d60c64\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>chamber</th>\n",
              "      <th>year</th>\n",
              "      <th>party.mean.diff.d1</th>\n",
              "      <th>prop.moderate.d1</th>\n",
              "      <th>prop.moderate.dem.d1</th>\n",
              "      <th>prop.moderate.rep.d1</th>\n",
              "      <th>overlap</th>\n",
              "      <th>chamber.mean.d1</th>\n",
              "      <th>chamber.mean.d2</th>\n",
              "      <th>dem.mean.d1</th>\n",
              "      <th>...</th>\n",
              "      <th>rep.mean.d1</th>\n",
              "      <th>rep.mean.d2</th>\n",
              "      <th>north.rep.mean.d1</th>\n",
              "      <th>north.rep.mean.d2</th>\n",
              "      <th>south.rep.mean.d1</th>\n",
              "      <th>south.rep.mean.d2</th>\n",
              "      <th>north.dem.mean.d1</th>\n",
              "      <th>north.dem.mean.d2</th>\n",
              "      <th>south.dem.mean.d1</th>\n",
              "      <th>south.dem.mean.d2</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>House</td>\n",
              "      <td>1879</td>\n",
              "      <td>0.785883</td>\n",
              "      <td>0.130435</td>\n",
              "      <td>0.110345</td>\n",
              "      <td>0.066667</td>\n",
              "      <td>0.0</td>\n",
              "      <td>-0.018943</td>\n",
              "      <td>-0.043084</td>\n",
              "      <td>-0.390986</td>\n",
              "      <td>...</td>\n",
              "      <td>0.394896</td>\n",
              "      <td>-0.128074</td>\n",
              "      <td>0.398015</td>\n",
              "      <td>-0.127235</td>\n",
              "      <td>0.257667</td>\n",
              "      <td>-0.165000</td>\n",
              "      <td>-0.343253</td>\n",
              "      <td>-0.063924</td>\n",
              "      <td>-0.448121</td>\n",
              "      <td>-0.031894</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>Senate</td>\n",
              "      <td>1879</td>\n",
              "      <td>0.747943</td>\n",
              "      <td>0.160494</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.342857</td>\n",
              "      <td>0.0</td>\n",
              "      <td>-0.124568</td>\n",
              "      <td>-0.077630</td>\n",
              "      <td>-0.452600</td>\n",
              "      <td>...</td>\n",
              "      <td>0.295343</td>\n",
              "      <td>-0.027171</td>\n",
              "      <td>0.296303</td>\n",
              "      <td>-0.079273</td>\n",
              "      <td>0.279500</td>\n",
              "      <td>0.832500</td>\n",
              "      <td>-0.455136</td>\n",
              "      <td>-0.263591</td>\n",
              "      <td>-0.450174</td>\n",
              "      <td>0.023696</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>House</td>\n",
              "      <td>1881</td>\n",
              "      <td>0.782714</td>\n",
              "      <td>0.100324</td>\n",
              "      <td>0.110294</td>\n",
              "      <td>0.025157</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.026343</td>\n",
              "      <td>-0.025706</td>\n",
              "      <td>-0.394978</td>\n",
              "      <td>...</td>\n",
              "      <td>0.387736</td>\n",
              "      <td>-0.050755</td>\n",
              "      <td>0.391087</td>\n",
              "      <td>-0.042993</td>\n",
              "      <td>0.331889</td>\n",
              "      <td>-0.180111</td>\n",
              "      <td>-0.332643</td>\n",
              "      <td>-0.058429</td>\n",
              "      <td>-0.461091</td>\n",
              "      <td>-0.078530</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>Senate</td>\n",
              "      <td>1881</td>\n",
              "      <td>0.763571</td>\n",
              "      <td>0.141176</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.244444</td>\n",
              "      <td>0.0</td>\n",
              "      <td>-0.030047</td>\n",
              "      <td>-0.080929</td>\n",
              "      <td>-0.448816</td>\n",
              "      <td>...</td>\n",
              "      <td>0.314756</td>\n",
              "      <td>-0.113044</td>\n",
              "      <td>0.316341</td>\n",
              "      <td>-0.132182</td>\n",
              "      <td>0.245000</td>\n",
              "      <td>0.729000</td>\n",
              "      <td>-0.455118</td>\n",
              "      <td>-0.199059</td>\n",
              "      <td>-0.443714</td>\n",
              "      <td>0.065667</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>House</td>\n",
              "      <td>1883</td>\n",
              "      <td>0.724404</td>\n",
              "      <td>0.216374</td>\n",
              "      <td>0.275862</td>\n",
              "      <td>0.096000</td>\n",
              "      <td>0.0</td>\n",
              "      <td>-0.066354</td>\n",
              "      <td>-0.029848</td>\n",
              "      <td>-0.346916</td>\n",
              "      <td>...</td>\n",
              "      <td>0.377488</td>\n",
              "      <td>0.001824</td>\n",
              "      <td>0.384009</td>\n",
              "      <td>0.009155</td>\n",
              "      <td>0.293444</td>\n",
              "      <td>-0.092667</td>\n",
              "      <td>-0.281450</td>\n",
              "      <td>-0.008705</td>\n",
              "      <td>-0.461041</td>\n",
              "      <td>-0.129784</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>5 rows × 21 columns</p>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-ea51ad2d-bfb7-4178-b719-8866c9d60c64')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-ea51ad2d-bfb7-4178-b719-8866c9d60c64 button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-ea51ad2d-bfb7-4178-b719-8866c9d60c64');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 6
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "datauas.drop(columns='year', inplace=True)\n",
        "datauas.head()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 270
        },
        "id": "OGFoaCIs6ubV",
        "outputId": "db0217e8-3bf2-40dc-8d36-5246c96406db"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "  chamber  party.mean.diff.d1  prop.moderate.d1  prop.moderate.dem.d1  \\\n",
              "0   House            0.785883          0.130435              0.110345   \n",
              "1  Senate            0.747943          0.160494              0.000000   \n",
              "2   House            0.782714          0.100324              0.110294   \n",
              "3  Senate            0.763571          0.141176              0.000000   \n",
              "4   House            0.724404          0.216374              0.275862   \n",
              "\n",
              "   prop.moderate.rep.d1  overlap  chamber.mean.d1  chamber.mean.d2  \\\n",
              "0              0.066667      0.0        -0.018943        -0.043084   \n",
              "1              0.342857      0.0        -0.124568        -0.077630   \n",
              "2              0.025157      0.0         0.026343        -0.025706   \n",
              "3              0.244444      0.0        -0.030047        -0.080929   \n",
              "4              0.096000      0.0        -0.066354        -0.029848   \n",
              "\n",
              "   dem.mean.d1  dem.mean.d2  rep.mean.d1  rep.mean.d2  north.rep.mean.d1  \\\n",
              "0    -0.390986    -0.049345     0.394896    -0.128074           0.398015   \n",
              "1    -0.452600    -0.116756     0.295343    -0.027171           0.296303   \n",
              "2    -0.394978    -0.068184     0.387736    -0.050755           0.391087   \n",
              "3    -0.448816    -0.052763     0.314756    -0.113044           0.316341   \n",
              "4    -0.346916    -0.052842     0.377488     0.001824           0.384009   \n",
              "\n",
              "   north.rep.mean.d2  south.rep.mean.d1  south.rep.mean.d2  north.dem.mean.d1  \\\n",
              "0          -0.127235           0.257667          -0.165000          -0.343253   \n",
              "1          -0.079273           0.279500           0.832500          -0.455136   \n",
              "2          -0.042993           0.331889          -0.180111          -0.332643   \n",
              "3          -0.132182           0.245000           0.729000          -0.455118   \n",
              "4           0.009155           0.293444          -0.092667          -0.281450   \n",
              "\n",
              "   north.dem.mean.d2  south.dem.mean.d1  south.dem.mean.d2  \n",
              "0          -0.063924          -0.448121          -0.031894  \n",
              "1          -0.263591          -0.450174           0.023696  \n",
              "2          -0.058429          -0.461091          -0.078530  \n",
              "3          -0.199059          -0.443714           0.065667  \n",
              "4          -0.008705          -0.461041          -0.129784  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-639f3ea1-9f72-46d2-8a8f-d5664f3900c5\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>chamber</th>\n",
              "      <th>party.mean.diff.d1</th>\n",
              "      <th>prop.moderate.d1</th>\n",
              "      <th>prop.moderate.dem.d1</th>\n",
              "      <th>prop.moderate.rep.d1</th>\n",
              "      <th>overlap</th>\n",
              "      <th>chamber.mean.d1</th>\n",
              "      <th>chamber.mean.d2</th>\n",
              "      <th>dem.mean.d1</th>\n",
              "      <th>dem.mean.d2</th>\n",
              "      <th>rep.mean.d1</th>\n",
              "      <th>rep.mean.d2</th>\n",
              "      <th>north.rep.mean.d1</th>\n",
              "      <th>north.rep.mean.d2</th>\n",
              "      <th>south.rep.mean.d1</th>\n",
              "      <th>south.rep.mean.d2</th>\n",
              "      <th>north.dem.mean.d1</th>\n",
              "      <th>north.dem.mean.d2</th>\n",
              "      <th>south.dem.mean.d1</th>\n",
              "      <th>south.dem.mean.d2</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>House</td>\n",
              "      <td>0.785883</td>\n",
              "      <td>0.130435</td>\n",
              "      <td>0.110345</td>\n",
              "      <td>0.066667</td>\n",
              "      <td>0.0</td>\n",
              "      <td>-0.018943</td>\n",
              "      <td>-0.043084</td>\n",
              "      <td>-0.390986</td>\n",
              "      <td>-0.049345</td>\n",
              "      <td>0.394896</td>\n",
              "      <td>-0.128074</td>\n",
              "      <td>0.398015</td>\n",
              "      <td>-0.127235</td>\n",
              "      <td>0.257667</td>\n",
              "      <td>-0.165000</td>\n",
              "      <td>-0.343253</td>\n",
              "      <td>-0.063924</td>\n",
              "      <td>-0.448121</td>\n",
              "      <td>-0.031894</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>Senate</td>\n",
              "      <td>0.747943</td>\n",
              "      <td>0.160494</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.342857</td>\n",
              "      <td>0.0</td>\n",
              "      <td>-0.124568</td>\n",
              "      <td>-0.077630</td>\n",
              "      <td>-0.452600</td>\n",
              "      <td>-0.116756</td>\n",
              "      <td>0.295343</td>\n",
              "      <td>-0.027171</td>\n",
              "      <td>0.296303</td>\n",
              "      <td>-0.079273</td>\n",
              "      <td>0.279500</td>\n",
              "      <td>0.832500</td>\n",
              "      <td>-0.455136</td>\n",
              "      <td>-0.263591</td>\n",
              "      <td>-0.450174</td>\n",
              "      <td>0.023696</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>House</td>\n",
              "      <td>0.782714</td>\n",
              "      <td>0.100324</td>\n",
              "      <td>0.110294</td>\n",
              "      <td>0.025157</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.026343</td>\n",
              "      <td>-0.025706</td>\n",
              "      <td>-0.394978</td>\n",
              "      <td>-0.068184</td>\n",
              "      <td>0.387736</td>\n",
              "      <td>-0.050755</td>\n",
              "      <td>0.391087</td>\n",
              "      <td>-0.042993</td>\n",
              "      <td>0.331889</td>\n",
              "      <td>-0.180111</td>\n",
              "      <td>-0.332643</td>\n",
              "      <td>-0.058429</td>\n",
              "      <td>-0.461091</td>\n",
              "      <td>-0.078530</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>Senate</td>\n",
              "      <td>0.763571</td>\n",
              "      <td>0.141176</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.244444</td>\n",
              "      <td>0.0</td>\n",
              "      <td>-0.030047</td>\n",
              "      <td>-0.080929</td>\n",
              "      <td>-0.448816</td>\n",
              "      <td>-0.052763</td>\n",
              "      <td>0.314756</td>\n",
              "      <td>-0.113044</td>\n",
              "      <td>0.316341</td>\n",
              "      <td>-0.132182</td>\n",
              "      <td>0.245000</td>\n",
              "      <td>0.729000</td>\n",
              "      <td>-0.455118</td>\n",
              "      <td>-0.199059</td>\n",
              "      <td>-0.443714</td>\n",
              "      <td>0.065667</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>House</td>\n",
              "      <td>0.724404</td>\n",
              "      <td>0.216374</td>\n",
              "      <td>0.275862</td>\n",
              "      <td>0.096000</td>\n",
              "      <td>0.0</td>\n",
              "      <td>-0.066354</td>\n",
              "      <td>-0.029848</td>\n",
              "      <td>-0.346916</td>\n",
              "      <td>-0.052842</td>\n",
              "      <td>0.377488</td>\n",
              "      <td>0.001824</td>\n",
              "      <td>0.384009</td>\n",
              "      <td>0.009155</td>\n",
              "      <td>0.293444</td>\n",
              "      <td>-0.092667</td>\n",
              "      <td>-0.281450</td>\n",
              "      <td>-0.008705</td>\n",
              "      <td>-0.461041</td>\n",
              "      <td>-0.129784</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-639f3ea1-9f72-46d2-8a8f-d5664f3900c5')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-639f3ea1-9f72-46d2-8a8f-d5664f3900c5 button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-639f3ea1-9f72-46d2-8a8f-d5664f3900c5');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 7
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "datauas.shape"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "NCJV0iuf65mz",
        "outputId": "e01c8ba5-e24e-45c9-f0f8-c4ccdef8095f"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "(144, 20)"
            ]
          },
          "metadata": {},
          "execution_count": 8
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "datauas.dtypes"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "s0C-8EYY69mY",
        "outputId": "526caf4c-b019-42fa-db74-1f402e8e406d"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "chamber                  object\n",
              "party.mean.diff.d1      float64\n",
              "prop.moderate.d1        float64\n",
              "prop.moderate.dem.d1    float64\n",
              "prop.moderate.rep.d1    float64\n",
              "overlap                 float64\n",
              "chamber.mean.d1         float64\n",
              "chamber.mean.d2         float64\n",
              "dem.mean.d1             float64\n",
              "dem.mean.d2             float64\n",
              "rep.mean.d1             float64\n",
              "rep.mean.d2             float64\n",
              "north.rep.mean.d1       float64\n",
              "north.rep.mean.d2       float64\n",
              "south.rep.mean.d1       float64\n",
              "south.rep.mean.d2       float64\n",
              "north.dem.mean.d1       float64\n",
              "north.dem.mean.d2       float64\n",
              "south.dem.mean.d1       float64\n",
              "south.dem.mean.d2       float64\n",
              "dtype: object"
            ]
          },
          "metadata": {},
          "execution_count": 9
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "datauas.info()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "CzKsQoY47C8o",
        "outputId": "3dc7a9d3-e16d-43df-961c-bae44e9cf9db"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "<class 'pandas.core.frame.DataFrame'>\n",
            "RangeIndex: 144 entries, 0 to 143\n",
            "Data columns (total 20 columns):\n",
            " #   Column                Non-Null Count  Dtype  \n",
            "---  ------                --------------  -----  \n",
            " 0   chamber               144 non-null    object \n",
            " 1   party.mean.diff.d1    144 non-null    float64\n",
            " 2   prop.moderate.d1      144 non-null    float64\n",
            " 3   prop.moderate.dem.d1  144 non-null    float64\n",
            " 4   prop.moderate.rep.d1  144 non-null    float64\n",
            " 5   overlap               144 non-null    float64\n",
            " 6   chamber.mean.d1       144 non-null    float64\n",
            " 7   chamber.mean.d2       144 non-null    float64\n",
            " 8   dem.mean.d1           144 non-null    float64\n",
            " 9   dem.mean.d2           144 non-null    float64\n",
            " 10  rep.mean.d1           144 non-null    float64\n",
            " 11  rep.mean.d2           144 non-null    float64\n",
            " 12  north.rep.mean.d1     144 non-null    float64\n",
            " 13  north.rep.mean.d2     144 non-null    float64\n",
            " 14  south.rep.mean.d1     125 non-null    float64\n",
            " 15  south.rep.mean.d2     125 non-null    float64\n",
            " 16  north.dem.mean.d1     144 non-null    float64\n",
            " 17  north.dem.mean.d2     144 non-null    float64\n",
            " 18  south.dem.mean.d1     144 non-null    float64\n",
            " 19  south.dem.mean.d2     144 non-null    float64\n",
            "dtypes: float64(19), object(1)\n",
            "memory usage: 22.6+ KB\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "datauas.isna().values.any()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "TTn82jXm7L62",
        "outputId": "15d4761c-6299-4b6c-8bcf-7f51aae193a5"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "True"
            ]
          },
          "metadata": {},
          "execution_count": 11
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "datauas = datauas.dropna()"
      ],
      "metadata": {
        "id": "Kvb0-F5UAgKu"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "datauas.isna().values.any()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "7Zo87O2mBxGM",
        "outputId": "63f55516-d3de-4273-a519-9506d79a7eaa"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "False"
            ]
          },
          "metadata": {},
          "execution_count": 57
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "datauas[datauas.duplicated()]"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 113
        },
        "id": "b7Mlwg297WsD",
        "outputId": "dc5b9364-ac8c-4c37-aee6-b65b2715eb1a"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "Empty DataFrame\n",
              "Columns: [chamber, party.mean.diff.d1, prop.moderate.d1, prop.moderate.dem.d1, prop.moderate.rep.d1, overlap, chamber.mean.d1, chamber.mean.d2, dem.mean.d1, dem.mean.d2, rep.mean.d1, rep.mean.d2, north.rep.mean.d1, north.rep.mean.d2, south.rep.mean.d1, south.rep.mean.d2, north.dem.mean.d1, north.dem.mean.d2, south.dem.mean.d1, south.dem.mean.d2]\n",
              "Index: []"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-ee2e84ad-10f8-4913-ac66-62cab044dd8e\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>chamber</th>\n",
              "      <th>party.mean.diff.d1</th>\n",
              "      <th>prop.moderate.d1</th>\n",
              "      <th>prop.moderate.dem.d1</th>\n",
              "      <th>prop.moderate.rep.d1</th>\n",
              "      <th>overlap</th>\n",
              "      <th>chamber.mean.d1</th>\n",
              "      <th>chamber.mean.d2</th>\n",
              "      <th>dem.mean.d1</th>\n",
              "      <th>dem.mean.d2</th>\n",
              "      <th>rep.mean.d1</th>\n",
              "      <th>rep.mean.d2</th>\n",
              "      <th>north.rep.mean.d1</th>\n",
              "      <th>north.rep.mean.d2</th>\n",
              "      <th>south.rep.mean.d1</th>\n",
              "      <th>south.rep.mean.d2</th>\n",
              "      <th>north.dem.mean.d1</th>\n",
              "      <th>north.dem.mean.d2</th>\n",
              "      <th>south.dem.mean.d1</th>\n",
              "      <th>south.dem.mean.d2</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-ee2e84ad-10f8-4913-ac66-62cab044dd8e')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-ee2e84ad-10f8-4913-ac66-62cab044dd8e button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-ee2e84ad-10f8-4913-ac66-62cab044dd8e');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 58
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "datauas.duplicated().value_counts()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "E0-XLuOy7cfa",
        "outputId": "341a25d9-a314-4e3e-ebf8-bc89f31df2e6"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "False    125\n",
              "dtype: int64"
            ]
          },
          "metadata": {},
          "execution_count": 59
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "datauas.describe()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 364
        },
        "id": "P5OIOb4M7pRJ",
        "outputId": "31984043-e0dd-475b-f44f-d4afa8b4dc34"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "       party.mean.diff.d1  prop.moderate.d1  prop.moderate.dem.d1  \\\n",
              "count          125.000000        125.000000            125.000000   \n",
              "mean             0.679489          0.268980              0.295956   \n",
              "std              0.109715          0.130002              0.143177   \n",
              "min              0.478589          0.037783              0.000000   \n",
              "25%              0.576847          0.156818              0.187500   \n",
              "50%              0.675215          0.259259              0.295455   \n",
              "75%              0.777287          0.375566              0.392157   \n",
              "max              0.885473          0.537037              0.638298   \n",
              "\n",
              "       prop.moderate.rep.d1     overlap  chamber.mean.d1  chamber.mean.d2  \\\n",
              "count            125.000000  125.000000       125.000000       125.000000   \n",
              "mean               0.236217    0.107191         0.007219         0.003866   \n",
              "std                0.167287    0.154553         0.075687         0.083140   \n",
              "min                0.004673    0.000000        -0.139102        -0.151870   \n",
              "25%                0.079365    0.000000        -0.058108        -0.052960   \n",
              "50%                0.204545    0.008427         0.014195        -0.002440   \n",
              "75%                0.400901    0.204900         0.065960         0.063321   \n",
              "max                0.539683    0.641204         0.178277         0.189508   \n",
              "\n",
              "       dem.mean.d1  dem.mean.d2  rep.mean.d1  rep.mean.d2  north.rep.mean.d1  \\\n",
              "count   125.000000   125.000000   125.000000   125.000000         125.000000   \n",
              "mean     -0.321093     0.099651     0.358397    -0.134756           0.348104   \n",
              "std       0.054913     0.198944     0.073525     0.147773           0.071040   \n",
              "min      -0.458838    -0.261553     0.233222    -0.458756           0.226692   \n",
              "25%      -0.363852    -0.062935     0.291738    -0.240042           0.285425   \n",
              "50%      -0.309533     0.062091     0.368440    -0.149959           0.338385   \n",
              "75%      -0.288558     0.293769     0.409840    -0.001694           0.408754   \n",
              "max      -0.191532     0.487459     0.524745     0.148736           0.501633   \n",
              "\n",
              "       north.rep.mean.d2  south.rep.mean.d1  south.rep.mean.d2  \\\n",
              "count         125.000000         125.000000         125.000000   \n",
              "mean           -0.170859           0.381850           0.068322   \n",
              "std             0.169244           0.103511           0.194680   \n",
              "min            -0.510281           0.011000          -0.408000   \n",
              "25%            -0.278072           0.298143          -0.018250   \n",
              "50%            -0.187462           0.397538           0.092222   \n",
              "75%            -0.014523           0.448651           0.170000   \n",
              "max             0.144412           0.642000           0.832500   \n",
              "\n",
              "       north.dem.mean.d1  north.dem.mean.d2  south.dem.mean.d1  \\\n",
              "count         125.000000         125.000000         125.000000   \n",
              "mean           -0.339616          -0.047048          -0.264848   \n",
              "std             0.056406           0.122730           0.120603   \n",
              "min            -0.455136          -0.331704          -0.475038   \n",
              "25%            -0.379994          -0.119747          -0.380125   \n",
              "50%            -0.350432          -0.060536          -0.213333   \n",
              "75%            -0.306597           0.052930          -0.155605   \n",
              "max            -0.152476           0.206750          -0.085818   \n",
              "\n",
              "       south.dem.mean.d2  \n",
              "count         125.000000  \n",
              "mean            0.376263  \n",
              "std             0.352458  \n",
              "min            -0.308346  \n",
              "25%             0.027612  \n",
              "50%             0.375112  \n",
              "75%             0.729882  \n",
              "max             0.856279  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-2ba21165-b668-40c7-8c51-6634c4b599c1\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>party.mean.diff.d1</th>\n",
              "      <th>prop.moderate.d1</th>\n",
              "      <th>prop.moderate.dem.d1</th>\n",
              "      <th>prop.moderate.rep.d1</th>\n",
              "      <th>overlap</th>\n",
              "      <th>chamber.mean.d1</th>\n",
              "      <th>chamber.mean.d2</th>\n",
              "      <th>dem.mean.d1</th>\n",
              "      <th>dem.mean.d2</th>\n",
              "      <th>rep.mean.d1</th>\n",
              "      <th>rep.mean.d2</th>\n",
              "      <th>north.rep.mean.d1</th>\n",
              "      <th>north.rep.mean.d2</th>\n",
              "      <th>south.rep.mean.d1</th>\n",
              "      <th>south.rep.mean.d2</th>\n",
              "      <th>north.dem.mean.d1</th>\n",
              "      <th>north.dem.mean.d2</th>\n",
              "      <th>south.dem.mean.d1</th>\n",
              "      <th>south.dem.mean.d2</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>count</th>\n",
              "      <td>125.000000</td>\n",
              "      <td>125.000000</td>\n",
              "      <td>125.000000</td>\n",
              "      <td>125.000000</td>\n",
              "      <td>125.000000</td>\n",
              "      <td>125.000000</td>\n",
              "      <td>125.000000</td>\n",
              "      <td>125.000000</td>\n",
              "      <td>125.000000</td>\n",
              "      <td>125.000000</td>\n",
              "      <td>125.000000</td>\n",
              "      <td>125.000000</td>\n",
              "      <td>125.000000</td>\n",
              "      <td>125.000000</td>\n",
              "      <td>125.000000</td>\n",
              "      <td>125.000000</td>\n",
              "      <td>125.000000</td>\n",
              "      <td>125.000000</td>\n",
              "      <td>125.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>mean</th>\n",
              "      <td>0.679489</td>\n",
              "      <td>0.268980</td>\n",
              "      <td>0.295956</td>\n",
              "      <td>0.236217</td>\n",
              "      <td>0.107191</td>\n",
              "      <td>0.007219</td>\n",
              "      <td>0.003866</td>\n",
              "      <td>-0.321093</td>\n",
              "      <td>0.099651</td>\n",
              "      <td>0.358397</td>\n",
              "      <td>-0.134756</td>\n",
              "      <td>0.348104</td>\n",
              "      <td>-0.170859</td>\n",
              "      <td>0.381850</td>\n",
              "      <td>0.068322</td>\n",
              "      <td>-0.339616</td>\n",
              "      <td>-0.047048</td>\n",
              "      <td>-0.264848</td>\n",
              "      <td>0.376263</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>std</th>\n",
              "      <td>0.109715</td>\n",
              "      <td>0.130002</td>\n",
              "      <td>0.143177</td>\n",
              "      <td>0.167287</td>\n",
              "      <td>0.154553</td>\n",
              "      <td>0.075687</td>\n",
              "      <td>0.083140</td>\n",
              "      <td>0.054913</td>\n",
              "      <td>0.198944</td>\n",
              "      <td>0.073525</td>\n",
              "      <td>0.147773</td>\n",
              "      <td>0.071040</td>\n",
              "      <td>0.169244</td>\n",
              "      <td>0.103511</td>\n",
              "      <td>0.194680</td>\n",
              "      <td>0.056406</td>\n",
              "      <td>0.122730</td>\n",
              "      <td>0.120603</td>\n",
              "      <td>0.352458</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>min</th>\n",
              "      <td>0.478589</td>\n",
              "      <td>0.037783</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.004673</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>-0.139102</td>\n",
              "      <td>-0.151870</td>\n",
              "      <td>-0.458838</td>\n",
              "      <td>-0.261553</td>\n",
              "      <td>0.233222</td>\n",
              "      <td>-0.458756</td>\n",
              "      <td>0.226692</td>\n",
              "      <td>-0.510281</td>\n",
              "      <td>0.011000</td>\n",
              "      <td>-0.408000</td>\n",
              "      <td>-0.455136</td>\n",
              "      <td>-0.331704</td>\n",
              "      <td>-0.475038</td>\n",
              "      <td>-0.308346</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>25%</th>\n",
              "      <td>0.576847</td>\n",
              "      <td>0.156818</td>\n",
              "      <td>0.187500</td>\n",
              "      <td>0.079365</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>-0.058108</td>\n",
              "      <td>-0.052960</td>\n",
              "      <td>-0.363852</td>\n",
              "      <td>-0.062935</td>\n",
              "      <td>0.291738</td>\n",
              "      <td>-0.240042</td>\n",
              "      <td>0.285425</td>\n",
              "      <td>-0.278072</td>\n",
              "      <td>0.298143</td>\n",
              "      <td>-0.018250</td>\n",
              "      <td>-0.379994</td>\n",
              "      <td>-0.119747</td>\n",
              "      <td>-0.380125</td>\n",
              "      <td>0.027612</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>50%</th>\n",
              "      <td>0.675215</td>\n",
              "      <td>0.259259</td>\n",
              "      <td>0.295455</td>\n",
              "      <td>0.204545</td>\n",
              "      <td>0.008427</td>\n",
              "      <td>0.014195</td>\n",
              "      <td>-0.002440</td>\n",
              "      <td>-0.309533</td>\n",
              "      <td>0.062091</td>\n",
              "      <td>0.368440</td>\n",
              "      <td>-0.149959</td>\n",
              "      <td>0.338385</td>\n",
              "      <td>-0.187462</td>\n",
              "      <td>0.397538</td>\n",
              "      <td>0.092222</td>\n",
              "      <td>-0.350432</td>\n",
              "      <td>-0.060536</td>\n",
              "      <td>-0.213333</td>\n",
              "      <td>0.375112</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>75%</th>\n",
              "      <td>0.777287</td>\n",
              "      <td>0.375566</td>\n",
              "      <td>0.392157</td>\n",
              "      <td>0.400901</td>\n",
              "      <td>0.204900</td>\n",
              "      <td>0.065960</td>\n",
              "      <td>0.063321</td>\n",
              "      <td>-0.288558</td>\n",
              "      <td>0.293769</td>\n",
              "      <td>0.409840</td>\n",
              "      <td>-0.001694</td>\n",
              "      <td>0.408754</td>\n",
              "      <td>-0.014523</td>\n",
              "      <td>0.448651</td>\n",
              "      <td>0.170000</td>\n",
              "      <td>-0.306597</td>\n",
              "      <td>0.052930</td>\n",
              "      <td>-0.155605</td>\n",
              "      <td>0.729882</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>max</th>\n",
              "      <td>0.885473</td>\n",
              "      <td>0.537037</td>\n",
              "      <td>0.638298</td>\n",
              "      <td>0.539683</td>\n",
              "      <td>0.641204</td>\n",
              "      <td>0.178277</td>\n",
              "      <td>0.189508</td>\n",
              "      <td>-0.191532</td>\n",
              "      <td>0.487459</td>\n",
              "      <td>0.524745</td>\n",
              "      <td>0.148736</td>\n",
              "      <td>0.501633</td>\n",
              "      <td>0.144412</td>\n",
              "      <td>0.642000</td>\n",
              "      <td>0.832500</td>\n",
              "      <td>-0.152476</td>\n",
              "      <td>0.206750</td>\n",
              "      <td>-0.085818</td>\n",
              "      <td>0.856279</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-2ba21165-b668-40c7-8c51-6634c4b599c1')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-2ba21165-b668-40c7-8c51-6634c4b599c1 button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-2ba21165-b668-40c7-8c51-6634c4b599c1');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 60
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "datauas.corr()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 709
        },
        "id": "lXwuct7173Zn",
        "outputId": "20bdfc59-51a0-4a73-93ac-56fc84d3930f"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "                      party.mean.diff.d1  prop.moderate.d1  \\\n",
              "party.mean.diff.d1              1.000000         -0.947476   \n",
              "prop.moderate.d1               -0.947476          1.000000   \n",
              "prop.moderate.dem.d1           -0.754558          0.844417   \n",
              "prop.moderate.rep.d1           -0.889523          0.863685   \n",
              "overlap                        -0.726938          0.744588   \n",
              "chamber.mean.d1                 0.509862         -0.500559   \n",
              "chamber.mean.d2                -0.515630          0.567957   \n",
              "dem.mean.d1                    -0.800599          0.821561   \n",
              "dem.mean.d2                    -0.812597          0.783622   \n",
              "rep.mean.d1                     0.894277         -0.800245   \n",
              "rep.mean.d2                     0.712303         -0.632384   \n",
              "north.rep.mean.d1               0.881780         -0.781451   \n",
              "north.rep.mean.d2               0.666582         -0.562697   \n",
              "south.rep.mean.d1               0.530693         -0.451718   \n",
              "south.rep.mean.d2              -0.027623          0.014917   \n",
              "north.dem.mean.d1              -0.029511          0.043177   \n",
              "north.dem.mean.d2              -0.587245          0.606313   \n",
              "south.dem.mean.d1              -0.809965          0.804700   \n",
              "south.dem.mean.d2              -0.814815          0.768076   \n",
              "\n",
              "                      prop.moderate.dem.d1  prop.moderate.rep.d1   overlap  \\\n",
              "party.mean.diff.d1               -0.754558             -0.889523 -0.726938   \n",
              "prop.moderate.d1                  0.844417              0.863685  0.744588   \n",
              "prop.moderate.dem.d1              1.000000              0.495309  0.543737   \n",
              "prop.moderate.rep.d1              0.495309              1.000000  0.739557   \n",
              "overlap                           0.543737              0.739557  1.000000   \n",
              "chamber.mean.d1                  -0.113920             -0.638333 -0.496698   \n",
              "chamber.mean.d2                   0.583143              0.460071  0.557125   \n",
              "dem.mean.d1                       0.951920              0.522801  0.540130   \n",
              "dem.mean.d2                       0.642776              0.753305  0.648791   \n",
              "rep.mean.d1                      -0.415012             -0.936895 -0.681344   \n",
              "rep.mean.d2                      -0.288436             -0.757054 -0.471314   \n",
              "north.rep.mean.d1                -0.382522             -0.942916 -0.650208   \n",
              "north.rep.mean.d2                -0.220060             -0.718416 -0.396316   \n",
              "south.rep.mean.d1                -0.231977             -0.542874 -0.490081   \n",
              "south.rep.mean.d2                -0.033425              0.048455 -0.054401   \n",
              "north.dem.mean.d1                 0.436895             -0.311055 -0.167021   \n",
              "north.dem.mean.d2                 0.511541              0.577868  0.440171   \n",
              "south.dem.mean.d1                 0.680127              0.758910  0.664916   \n",
              "south.dem.mean.d2                 0.557638              0.796945  0.661634   \n",
              "\n",
              "                      chamber.mean.d1  chamber.mean.d2  dem.mean.d1  \\\n",
              "party.mean.diff.d1           0.509862        -0.515630    -0.800599   \n",
              "prop.moderate.d1            -0.500559         0.567957     0.821561   \n",
              "prop.moderate.dem.d1        -0.113920         0.583143     0.951920   \n",
              "prop.moderate.rep.d1        -0.638333         0.460071     0.522801   \n",
              "overlap                     -0.496698         0.557125     0.540130   \n",
              "chamber.mean.d1              1.000000        -0.142717    -0.113550   \n",
              "chamber.mean.d2             -0.142717         1.000000     0.523335   \n",
              "dem.mean.d1                 -0.113550         0.523335     1.000000   \n",
              "dem.mean.d2                 -0.325175         0.781956     0.663852   \n",
              "rep.mean.d1                  0.676014        -0.378572    -0.447806   \n",
              "rep.mean.d2                  0.541264        -0.096922    -0.366626   \n",
              "north.rep.mean.d1            0.682239        -0.311214    -0.448189   \n",
              "north.rep.mean.d2            0.518508         0.000384    -0.337771   \n",
              "south.rep.mean.d1            0.412436        -0.369259    -0.183545   \n",
              "south.rep.mean.d2           -0.107462         0.131148    -0.047271   \n",
              "north.dem.mean.d1            0.380941         0.040214     0.444391   \n",
              "north.dem.mean.d2           -0.155821         0.604095     0.527715   \n",
              "south.dem.mean.d1           -0.367366         0.436219     0.762423   \n",
              "south.dem.mean.d2           -0.480990         0.595086     0.633631   \n",
              "\n",
              "                      dem.mean.d2  rep.mean.d1  rep.mean.d2  \\\n",
              "party.mean.diff.d1      -0.812597     0.894277     0.712303   \n",
              "prop.moderate.d1         0.783622    -0.800245    -0.632384   \n",
              "prop.moderate.dem.d1     0.642776    -0.415012    -0.288436   \n",
              "prop.moderate.rep.d1     0.753305    -0.936895    -0.757054   \n",
              "overlap                  0.648791    -0.681344    -0.471314   \n",
              "chamber.mean.d1         -0.325175     0.676014     0.541264   \n",
              "chamber.mean.d2          0.781956    -0.378572    -0.096922   \n",
              "dem.mean.d1              0.663852    -0.447806    -0.366626   \n",
              "dem.mean.d2              1.000000    -0.716763    -0.626491   \n",
              "rep.mean.d1             -0.716763     1.000000     0.789087   \n",
              "rep.mean.d2             -0.626491     0.789087     1.000000   \n",
              "north.rep.mean.d1       -0.697002     0.981065     0.828010   \n",
              "north.rep.mean.d2       -0.555890     0.742413     0.972079   \n",
              "south.rep.mean.d1       -0.525296     0.654821     0.427881   \n",
              "south.rep.mean.d2        0.022967    -0.076524     0.215979   \n",
              "north.dem.mean.d1       -0.180370     0.287857     0.401790   \n",
              "north.dem.mean.d2        0.735993    -0.482165    -0.509067   \n",
              "south.dem.mean.d1        0.755583    -0.639217    -0.697304   \n",
              "south.dem.mean.d2        0.912063    -0.742643    -0.730667   \n",
              "\n",
              "                      north.rep.mean.d1  north.rep.mean.d2  south.rep.mean.d1  \\\n",
              "party.mean.diff.d1             0.881780           0.666582           0.530693   \n",
              "prop.moderate.d1              -0.781451          -0.562697          -0.451718   \n",
              "prop.moderate.dem.d1          -0.382522          -0.220060          -0.231977   \n",
              "prop.moderate.rep.d1          -0.942916          -0.718416          -0.542874   \n",
              "overlap                       -0.650208          -0.396316          -0.490081   \n",
              "chamber.mean.d1                0.682239           0.518508           0.412436   \n",
              "chamber.mean.d2               -0.311214           0.000384          -0.369259   \n",
              "dem.mean.d1                   -0.448189          -0.337771          -0.183545   \n",
              "dem.mean.d2                   -0.697002          -0.555890          -0.525296   \n",
              "rep.mean.d1                    0.981065           0.742413           0.654821   \n",
              "rep.mean.d2                    0.828010           0.972079           0.427881   \n",
              "north.rep.mean.d1              1.000000           0.815374           0.553445   \n",
              "north.rep.mean.d2              0.815374           1.000000           0.321224   \n",
              "south.rep.mean.d1              0.553445           0.321224           1.000000   \n",
              "south.rep.mean.d2             -0.094390           0.139570           0.139042   \n",
              "north.dem.mean.d1              0.336729           0.411145           0.204145   \n",
              "north.dem.mean.d2             -0.478632          -0.453801          -0.280790   \n",
              "south.dem.mean.d1             -0.699727          -0.709502          -0.249027   \n",
              "south.dem.mean.d2             -0.779157          -0.720685          -0.420607   \n",
              "\n",
              "                      south.rep.mean.d2  north.dem.mean.d1  north.dem.mean.d2  \\\n",
              "party.mean.diff.d1            -0.027623          -0.029511          -0.587245   \n",
              "prop.moderate.d1               0.014917           0.043177           0.606313   \n",
              "prop.moderate.dem.d1          -0.033425           0.436895           0.511541   \n",
              "prop.moderate.rep.d1           0.048455          -0.311055           0.577868   \n",
              "overlap                       -0.054401          -0.167021           0.440171   \n",
              "chamber.mean.d1               -0.107462           0.380941          -0.155821   \n",
              "chamber.mean.d2                0.131148           0.040214           0.604095   \n",
              "dem.mean.d1                   -0.047271           0.444391           0.527715   \n",
              "dem.mean.d2                    0.022967          -0.180370           0.735993   \n",
              "rep.mean.d1                   -0.076524           0.287857          -0.482165   \n",
              "rep.mean.d2                    0.215979           0.401790          -0.509067   \n",
              "north.rep.mean.d1             -0.094390           0.336729          -0.478632   \n",
              "north.rep.mean.d2              0.139570           0.411145          -0.453801   \n",
              "south.rep.mean.d1              0.139042           0.204145          -0.280790   \n",
              "south.rep.mean.d2              1.000000          -0.045601          -0.237743   \n",
              "north.dem.mean.d1             -0.045601           1.000000          -0.012558   \n",
              "north.dem.mean.d2             -0.237743          -0.012558           1.000000   \n",
              "south.dem.mean.d1             -0.064785          -0.168183           0.570507   \n",
              "south.dem.mean.d2              0.093343          -0.309540           0.574666   \n",
              "\n",
              "                      south.dem.mean.d1  south.dem.mean.d2  \n",
              "party.mean.diff.d1            -0.809965          -0.814815  \n",
              "prop.moderate.d1               0.804700           0.768076  \n",
              "prop.moderate.dem.d1           0.680127           0.557638  \n",
              "prop.moderate.rep.d1           0.758910           0.796945  \n",
              "overlap                        0.664916           0.661634  \n",
              "chamber.mean.d1               -0.367366          -0.480990  \n",
              "chamber.mean.d2                0.436219           0.595086  \n",
              "dem.mean.d1                    0.762423           0.633631  \n",
              "dem.mean.d2                    0.755583           0.912063  \n",
              "rep.mean.d1                   -0.639217          -0.742643  \n",
              "rep.mean.d2                   -0.697304          -0.730667  \n",
              "north.rep.mean.d1             -0.699727          -0.779157  \n",
              "north.rep.mean.d2             -0.709502          -0.720685  \n",
              "south.rep.mean.d1             -0.249027          -0.420607  \n",
              "south.rep.mean.d2             -0.064785           0.093343  \n",
              "north.dem.mean.d1             -0.168183          -0.309540  \n",
              "north.dem.mean.d2              0.570507           0.574666  \n",
              "south.dem.mean.d1              1.000000           0.873669  \n",
              "south.dem.mean.d2              0.873669           1.000000  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-19311fac-8873-439c-9db1-8373a7792853\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>party.mean.diff.d1</th>\n",
              "      <th>prop.moderate.d1</th>\n",
              "      <th>prop.moderate.dem.d1</th>\n",
              "      <th>prop.moderate.rep.d1</th>\n",
              "      <th>overlap</th>\n",
              "      <th>chamber.mean.d1</th>\n",
              "      <th>chamber.mean.d2</th>\n",
              "      <th>dem.mean.d1</th>\n",
              "      <th>dem.mean.d2</th>\n",
              "      <th>rep.mean.d1</th>\n",
              "      <th>rep.mean.d2</th>\n",
              "      <th>north.rep.mean.d1</th>\n",
              "      <th>north.rep.mean.d2</th>\n",
              "      <th>south.rep.mean.d1</th>\n",
              "      <th>south.rep.mean.d2</th>\n",
              "      <th>north.dem.mean.d1</th>\n",
              "      <th>north.dem.mean.d2</th>\n",
              "      <th>south.dem.mean.d1</th>\n",
              "      <th>south.dem.mean.d2</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>party.mean.diff.d1</th>\n",
              "      <td>1.000000</td>\n",
              "      <td>-0.947476</td>\n",
              "      <td>-0.754558</td>\n",
              "      <td>-0.889523</td>\n",
              "      <td>-0.726938</td>\n",
              "      <td>0.509862</td>\n",
              "      <td>-0.515630</td>\n",
              "      <td>-0.800599</td>\n",
              "      <td>-0.812597</td>\n",
              "      <td>0.894277</td>\n",
              "      <td>0.712303</td>\n",
              "      <td>0.881780</td>\n",
              "      <td>0.666582</td>\n",
              "      <td>0.530693</td>\n",
              "      <td>-0.027623</td>\n",
              "      <td>-0.029511</td>\n",
              "      <td>-0.587245</td>\n",
              "      <td>-0.809965</td>\n",
              "      <td>-0.814815</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>prop.moderate.d1</th>\n",
              "      <td>-0.947476</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>0.844417</td>\n",
              "      <td>0.863685</td>\n",
              "      <td>0.744588</td>\n",
              "      <td>-0.500559</td>\n",
              "      <td>0.567957</td>\n",
              "      <td>0.821561</td>\n",
              "      <td>0.783622</td>\n",
              "      <td>-0.800245</td>\n",
              "      <td>-0.632384</td>\n",
              "      <td>-0.781451</td>\n",
              "      <td>-0.562697</td>\n",
              "      <td>-0.451718</td>\n",
              "      <td>0.014917</td>\n",
              "      <td>0.043177</td>\n",
              "      <td>0.606313</td>\n",
              "      <td>0.804700</td>\n",
              "      <td>0.768076</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>prop.moderate.dem.d1</th>\n",
              "      <td>-0.754558</td>\n",
              "      <td>0.844417</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>0.495309</td>\n",
              "      <td>0.543737</td>\n",
              "      <td>-0.113920</td>\n",
              "      <td>0.583143</td>\n",
              "      <td>0.951920</td>\n",
              "      <td>0.642776</td>\n",
              "      <td>-0.415012</td>\n",
              "      <td>-0.288436</td>\n",
              "      <td>-0.382522</td>\n",
              "      <td>-0.220060</td>\n",
              "      <td>-0.231977</td>\n",
              "      <td>-0.033425</td>\n",
              "      <td>0.436895</td>\n",
              "      <td>0.511541</td>\n",
              "      <td>0.680127</td>\n",
              "      <td>0.557638</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>prop.moderate.rep.d1</th>\n",
              "      <td>-0.889523</td>\n",
              "      <td>0.863685</td>\n",
              "      <td>0.495309</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>0.739557</td>\n",
              "      <td>-0.638333</td>\n",
              "      <td>0.460071</td>\n",
              "      <td>0.522801</td>\n",
              "      <td>0.753305</td>\n",
              "      <td>-0.936895</td>\n",
              "      <td>-0.757054</td>\n",
              "      <td>-0.942916</td>\n",
              "      <td>-0.718416</td>\n",
              "      <td>-0.542874</td>\n",
              "      <td>0.048455</td>\n",
              "      <td>-0.311055</td>\n",
              "      <td>0.577868</td>\n",
              "      <td>0.758910</td>\n",
              "      <td>0.796945</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>overlap</th>\n",
              "      <td>-0.726938</td>\n",
              "      <td>0.744588</td>\n",
              "      <td>0.543737</td>\n",
              "      <td>0.739557</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>-0.496698</td>\n",
              "      <td>0.557125</td>\n",
              "      <td>0.540130</td>\n",
              "      <td>0.648791</td>\n",
              "      <td>-0.681344</td>\n",
              "      <td>-0.471314</td>\n",
              "      <td>-0.650208</td>\n",
              "      <td>-0.396316</td>\n",
              "      <td>-0.490081</td>\n",
              "      <td>-0.054401</td>\n",
              "      <td>-0.167021</td>\n",
              "      <td>0.440171</td>\n",
              "      <td>0.664916</td>\n",
              "      <td>0.661634</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>chamber.mean.d1</th>\n",
              "      <td>0.509862</td>\n",
              "      <td>-0.500559</td>\n",
              "      <td>-0.113920</td>\n",
              "      <td>-0.638333</td>\n",
              "      <td>-0.496698</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>-0.142717</td>\n",
              "      <td>-0.113550</td>\n",
              "      <td>-0.325175</td>\n",
              "      <td>0.676014</td>\n",
              "      <td>0.541264</td>\n",
              "      <td>0.682239</td>\n",
              "      <td>0.518508</td>\n",
              "      <td>0.412436</td>\n",
              "      <td>-0.107462</td>\n",
              "      <td>0.380941</td>\n",
              "      <td>-0.155821</td>\n",
              "      <td>-0.367366</td>\n",
              "      <td>-0.480990</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>chamber.mean.d2</th>\n",
              "      <td>-0.515630</td>\n",
              "      <td>0.567957</td>\n",
              "      <td>0.583143</td>\n",
              "      <td>0.460071</td>\n",
              "      <td>0.557125</td>\n",
              "      <td>-0.142717</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>0.523335</td>\n",
              "      <td>0.781956</td>\n",
              "      <td>-0.378572</td>\n",
              "      <td>-0.096922</td>\n",
              "      <td>-0.311214</td>\n",
              "      <td>0.000384</td>\n",
              "      <td>-0.369259</td>\n",
              "      <td>0.131148</td>\n",
              "      <td>0.040214</td>\n",
              "      <td>0.604095</td>\n",
              "      <td>0.436219</td>\n",
              "      <td>0.595086</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>dem.mean.d1</th>\n",
              "      <td>-0.800599</td>\n",
              "      <td>0.821561</td>\n",
              "      <td>0.951920</td>\n",
              "      <td>0.522801</td>\n",
              "      <td>0.540130</td>\n",
              "      <td>-0.113550</td>\n",
              "      <td>0.523335</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>0.663852</td>\n",
              "      <td>-0.447806</td>\n",
              "      <td>-0.366626</td>\n",
              "      <td>-0.448189</td>\n",
              "      <td>-0.337771</td>\n",
              "      <td>-0.183545</td>\n",
              "      <td>-0.047271</td>\n",
              "      <td>0.444391</td>\n",
              "      <td>0.527715</td>\n",
              "      <td>0.762423</td>\n",
              "      <td>0.633631</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>dem.mean.d2</th>\n",
              "      <td>-0.812597</td>\n",
              "      <td>0.783622</td>\n",
              "      <td>0.642776</td>\n",
              "      <td>0.753305</td>\n",
              "      <td>0.648791</td>\n",
              "      <td>-0.325175</td>\n",
              "      <td>0.781956</td>\n",
              "      <td>0.663852</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>-0.716763</td>\n",
              "      <td>-0.626491</td>\n",
              "      <td>-0.697002</td>\n",
              "      <td>-0.555890</td>\n",
              "      <td>-0.525296</td>\n",
              "      <td>0.022967</td>\n",
              "      <td>-0.180370</td>\n",
              "      <td>0.735993</td>\n",
              "      <td>0.755583</td>\n",
              "      <td>0.912063</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>rep.mean.d1</th>\n",
              "      <td>0.894277</td>\n",
              "      <td>-0.800245</td>\n",
              "      <td>-0.415012</td>\n",
              "      <td>-0.936895</td>\n",
              "      <td>-0.681344</td>\n",
              "      <td>0.676014</td>\n",
              "      <td>-0.378572</td>\n",
              "      <td>-0.447806</td>\n",
              "      <td>-0.716763</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>0.789087</td>\n",
              "      <td>0.981065</td>\n",
              "      <td>0.742413</td>\n",
              "      <td>0.654821</td>\n",
              "      <td>-0.076524</td>\n",
              "      <td>0.287857</td>\n",
              "      <td>-0.482165</td>\n",
              "      <td>-0.639217</td>\n",
              "      <td>-0.742643</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>rep.mean.d2</th>\n",
              "      <td>0.712303</td>\n",
              "      <td>-0.632384</td>\n",
              "      <td>-0.288436</td>\n",
              "      <td>-0.757054</td>\n",
              "      <td>-0.471314</td>\n",
              "      <td>0.541264</td>\n",
              "      <td>-0.096922</td>\n",
              "      <td>-0.366626</td>\n",
              "      <td>-0.626491</td>\n",
              "      <td>0.789087</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>0.828010</td>\n",
              "      <td>0.972079</td>\n",
              "      <td>0.427881</td>\n",
              "      <td>0.215979</td>\n",
              "      <td>0.401790</td>\n",
              "      <td>-0.509067</td>\n",
              "      <td>-0.697304</td>\n",
              "      <td>-0.730667</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>north.rep.mean.d1</th>\n",
              "      <td>0.881780</td>\n",
              "      <td>-0.781451</td>\n",
              "      <td>-0.382522</td>\n",
              "      <td>-0.942916</td>\n",
              "      <td>-0.650208</td>\n",
              "      <td>0.682239</td>\n",
              "      <td>-0.311214</td>\n",
              "      <td>-0.448189</td>\n",
              "      <td>-0.697002</td>\n",
              "      <td>0.981065</td>\n",
              "      <td>0.828010</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>0.815374</td>\n",
              "      <td>0.553445</td>\n",
              "      <td>-0.094390</td>\n",
              "      <td>0.336729</td>\n",
              "      <td>-0.478632</td>\n",
              "      <td>-0.699727</td>\n",
              "      <td>-0.779157</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>north.rep.mean.d2</th>\n",
              "      <td>0.666582</td>\n",
              "      <td>-0.562697</td>\n",
              "      <td>-0.220060</td>\n",
              "      <td>-0.718416</td>\n",
              "      <td>-0.396316</td>\n",
              "      <td>0.518508</td>\n",
              "      <td>0.000384</td>\n",
              "      <td>-0.337771</td>\n",
              "      <td>-0.555890</td>\n",
              "      <td>0.742413</td>\n",
              "      <td>0.972079</td>\n",
              "      <td>0.815374</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>0.321224</td>\n",
              "      <td>0.139570</td>\n",
              "      <td>0.411145</td>\n",
              "      <td>-0.453801</td>\n",
              "      <td>-0.709502</td>\n",
              "      <td>-0.720685</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>south.rep.mean.d1</th>\n",
              "      <td>0.530693</td>\n",
              "      <td>-0.451718</td>\n",
              "      <td>-0.231977</td>\n",
              "      <td>-0.542874</td>\n",
              "      <td>-0.490081</td>\n",
              "      <td>0.412436</td>\n",
              "      <td>-0.369259</td>\n",
              "      <td>-0.183545</td>\n",
              "      <td>-0.525296</td>\n",
              "      <td>0.654821</td>\n",
              "      <td>0.427881</td>\n",
              "      <td>0.553445</td>\n",
              "      <td>0.321224</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>0.139042</td>\n",
              "      <td>0.204145</td>\n",
              "      <td>-0.280790</td>\n",
              "      <td>-0.249027</td>\n",
              "      <td>-0.420607</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>south.rep.mean.d2</th>\n",
              "      <td>-0.027623</td>\n",
              "      <td>0.014917</td>\n",
              "      <td>-0.033425</td>\n",
              "      <td>0.048455</td>\n",
              "      <td>-0.054401</td>\n",
              "      <td>-0.107462</td>\n",
              "      <td>0.131148</td>\n",
              "      <td>-0.047271</td>\n",
              "      <td>0.022967</td>\n",
              "      <td>-0.076524</td>\n",
              "      <td>0.215979</td>\n",
              "      <td>-0.094390</td>\n",
              "      <td>0.139570</td>\n",
              "      <td>0.139042</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>-0.045601</td>\n",
              "      <td>-0.237743</td>\n",
              "      <td>-0.064785</td>\n",
              "      <td>0.093343</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>north.dem.mean.d1</th>\n",
              "      <td>-0.029511</td>\n",
              "      <td>0.043177</td>\n",
              "      <td>0.436895</td>\n",
              "      <td>-0.311055</td>\n",
              "      <td>-0.167021</td>\n",
              "      <td>0.380941</td>\n",
              "      <td>0.040214</td>\n",
              "      <td>0.444391</td>\n",
              "      <td>-0.180370</td>\n",
              "      <td>0.287857</td>\n",
              "      <td>0.401790</td>\n",
              "      <td>0.336729</td>\n",
              "      <td>0.411145</td>\n",
              "      <td>0.204145</td>\n",
              "      <td>-0.045601</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>-0.012558</td>\n",
              "      <td>-0.168183</td>\n",
              "      <td>-0.309540</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>north.dem.mean.d2</th>\n",
              "      <td>-0.587245</td>\n",
              "      <td>0.606313</td>\n",
              "      <td>0.511541</td>\n",
              "      <td>0.577868</td>\n",
              "      <td>0.440171</td>\n",
              "      <td>-0.155821</td>\n",
              "      <td>0.604095</td>\n",
              "      <td>0.527715</td>\n",
              "      <td>0.735993</td>\n",
              "      <td>-0.482165</td>\n",
              "      <td>-0.509067</td>\n",
              "      <td>-0.478632</td>\n",
              "      <td>-0.453801</td>\n",
              "      <td>-0.280790</td>\n",
              "      <td>-0.237743</td>\n",
              "      <td>-0.012558</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>0.570507</td>\n",
              "      <td>0.574666</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>south.dem.mean.d1</th>\n",
              "      <td>-0.809965</td>\n",
              "      <td>0.804700</td>\n",
              "      <td>0.680127</td>\n",
              "      <td>0.758910</td>\n",
              "      <td>0.664916</td>\n",
              "      <td>-0.367366</td>\n",
              "      <td>0.436219</td>\n",
              "      <td>0.762423</td>\n",
              "      <td>0.755583</td>\n",
              "      <td>-0.639217</td>\n",
              "      <td>-0.697304</td>\n",
              "      <td>-0.699727</td>\n",
              "      <td>-0.709502</td>\n",
              "      <td>-0.249027</td>\n",
              "      <td>-0.064785</td>\n",
              "      <td>-0.168183</td>\n",
              "      <td>0.570507</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>0.873669</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>south.dem.mean.d2</th>\n",
              "      <td>-0.814815</td>\n",
              "      <td>0.768076</td>\n",
              "      <td>0.557638</td>\n",
              "      <td>0.796945</td>\n",
              "      <td>0.661634</td>\n",
              "      <td>-0.480990</td>\n",
              "      <td>0.595086</td>\n",
              "      <td>0.633631</td>\n",
              "      <td>0.912063</td>\n",
              "      <td>-0.742643</td>\n",
              "      <td>-0.730667</td>\n",
              "      <td>-0.779157</td>\n",
              "      <td>-0.720685</td>\n",
              "      <td>-0.420607</td>\n",
              "      <td>0.093343</td>\n",
              "      <td>-0.309540</td>\n",
              "      <td>0.574666</td>\n",
              "      <td>0.873669</td>\n",
              "      <td>1.000000</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-19311fac-8873-439c-9db1-8373a7792853')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-19311fac-8873-439c-9db1-8373a7792853 button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-19311fac-8873-439c-9db1-8373a7792853');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 61
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "import matplotlib.pyplot as plt\n",
        "import seaborn as sns \n",
        "\n",
        "%matplotlib inline"
      ],
      "metadata": {
        "id": "YZm4CAK778ea"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "from sklearn.model_selection import train_test_split\n",
        "from sklearn.metrics import accuracy_score,confusion_matrix,classification_report"
      ],
      "metadata": {
        "id": "Ozc06se88QYv"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "X = datauas.drop(columns='chamber')\n",
        "X.head()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 270
        },
        "id": "mM0rMIwd8noO",
        "outputId": "608c5459-a30a-4714-905c-893cd7093f28"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "   party.mean.diff.d1  prop.moderate.d1  prop.moderate.dem.d1  \\\n",
              "0            0.785883          0.130435              0.110345   \n",
              "1            0.747943          0.160494              0.000000   \n",
              "2            0.782714          0.100324              0.110294   \n",
              "3            0.763571          0.141176              0.000000   \n",
              "4            0.724404          0.216374              0.275862   \n",
              "\n",
              "   prop.moderate.rep.d1  overlap  chamber.mean.d1  chamber.mean.d2  \\\n",
              "0              0.066667      0.0        -0.018943        -0.043084   \n",
              "1              0.342857      0.0        -0.124568        -0.077630   \n",
              "2              0.025157      0.0         0.026343        -0.025706   \n",
              "3              0.244444      0.0        -0.030047        -0.080929   \n",
              "4              0.096000      0.0        -0.066354        -0.029848   \n",
              "\n",
              "   dem.mean.d1  dem.mean.d2  rep.mean.d1  rep.mean.d2  north.rep.mean.d1  \\\n",
              "0    -0.390986    -0.049345     0.394896    -0.128074           0.398015   \n",
              "1    -0.452600    -0.116756     0.295343    -0.027171           0.296303   \n",
              "2    -0.394978    -0.068184     0.387736    -0.050755           0.391087   \n",
              "3    -0.448816    -0.052763     0.314756    -0.113044           0.316341   \n",
              "4    -0.346916    -0.052842     0.377488     0.001824           0.384009   \n",
              "\n",
              "   north.rep.mean.d2  south.rep.mean.d1  south.rep.mean.d2  north.dem.mean.d1  \\\n",
              "0          -0.127235           0.257667          -0.165000          -0.343253   \n",
              "1          -0.079273           0.279500           0.832500          -0.455136   \n",
              "2          -0.042993           0.331889          -0.180111          -0.332643   \n",
              "3          -0.132182           0.245000           0.729000          -0.455118   \n",
              "4           0.009155           0.293444          -0.092667          -0.281450   \n",
              "\n",
              "   north.dem.mean.d2  south.dem.mean.d1  south.dem.mean.d2  \n",
              "0          -0.063924          -0.448121          -0.031894  \n",
              "1          -0.263591          -0.450174           0.023696  \n",
              "2          -0.058429          -0.461091          -0.078530  \n",
              "3          -0.199059          -0.443714           0.065667  \n",
              "4          -0.008705          -0.461041          -0.129784  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-61912597-f4dc-4147-8a01-282b22446dce\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>party.mean.diff.d1</th>\n",
              "      <th>prop.moderate.d1</th>\n",
              "      <th>prop.moderate.dem.d1</th>\n",
              "      <th>prop.moderate.rep.d1</th>\n",
              "      <th>overlap</th>\n",
              "      <th>chamber.mean.d1</th>\n",
              "      <th>chamber.mean.d2</th>\n",
              "      <th>dem.mean.d1</th>\n",
              "      <th>dem.mean.d2</th>\n",
              "      <th>rep.mean.d1</th>\n",
              "      <th>rep.mean.d2</th>\n",
              "      <th>north.rep.mean.d1</th>\n",
              "      <th>north.rep.mean.d2</th>\n",
              "      <th>south.rep.mean.d1</th>\n",
              "      <th>south.rep.mean.d2</th>\n",
              "      <th>north.dem.mean.d1</th>\n",
              "      <th>north.dem.mean.d2</th>\n",
              "      <th>south.dem.mean.d1</th>\n",
              "      <th>south.dem.mean.d2</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>0.785883</td>\n",
              "      <td>0.130435</td>\n",
              "      <td>0.110345</td>\n",
              "      <td>0.066667</td>\n",
              "      <td>0.0</td>\n",
              "      <td>-0.018943</td>\n",
              "      <td>-0.043084</td>\n",
              "      <td>-0.390986</td>\n",
              "      <td>-0.049345</td>\n",
              "      <td>0.394896</td>\n",
              "      <td>-0.128074</td>\n",
              "      <td>0.398015</td>\n",
              "      <td>-0.127235</td>\n",
              "      <td>0.257667</td>\n",
              "      <td>-0.165000</td>\n",
              "      <td>-0.343253</td>\n",
              "      <td>-0.063924</td>\n",
              "      <td>-0.448121</td>\n",
              "      <td>-0.031894</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>0.747943</td>\n",
              "      <td>0.160494</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.342857</td>\n",
              "      <td>0.0</td>\n",
              "      <td>-0.124568</td>\n",
              "      <td>-0.077630</td>\n",
              "      <td>-0.452600</td>\n",
              "      <td>-0.116756</td>\n",
              "      <td>0.295343</td>\n",
              "      <td>-0.027171</td>\n",
              "      <td>0.296303</td>\n",
              "      <td>-0.079273</td>\n",
              "      <td>0.279500</td>\n",
              "      <td>0.832500</td>\n",
              "      <td>-0.455136</td>\n",
              "      <td>-0.263591</td>\n",
              "      <td>-0.450174</td>\n",
              "      <td>0.023696</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>0.782714</td>\n",
              "      <td>0.100324</td>\n",
              "      <td>0.110294</td>\n",
              "      <td>0.025157</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.026343</td>\n",
              "      <td>-0.025706</td>\n",
              "      <td>-0.394978</td>\n",
              "      <td>-0.068184</td>\n",
              "      <td>0.387736</td>\n",
              "      <td>-0.050755</td>\n",
              "      <td>0.391087</td>\n",
              "      <td>-0.042993</td>\n",
              "      <td>0.331889</td>\n",
              "      <td>-0.180111</td>\n",
              "      <td>-0.332643</td>\n",
              "      <td>-0.058429</td>\n",
              "      <td>-0.461091</td>\n",
              "      <td>-0.078530</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>0.763571</td>\n",
              "      <td>0.141176</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.244444</td>\n",
              "      <td>0.0</td>\n",
              "      <td>-0.030047</td>\n",
              "      <td>-0.080929</td>\n",
              "      <td>-0.448816</td>\n",
              "      <td>-0.052763</td>\n",
              "      <td>0.314756</td>\n",
              "      <td>-0.113044</td>\n",
              "      <td>0.316341</td>\n",
              "      <td>-0.132182</td>\n",
              "      <td>0.245000</td>\n",
              "      <td>0.729000</td>\n",
              "      <td>-0.455118</td>\n",
              "      <td>-0.199059</td>\n",
              "      <td>-0.443714</td>\n",
              "      <td>0.065667</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>0.724404</td>\n",
              "      <td>0.216374</td>\n",
              "      <td>0.275862</td>\n",
              "      <td>0.096000</td>\n",
              "      <td>0.0</td>\n",
              "      <td>-0.066354</td>\n",
              "      <td>-0.029848</td>\n",
              "      <td>-0.346916</td>\n",
              "      <td>-0.052842</td>\n",
              "      <td>0.377488</td>\n",
              "      <td>0.001824</td>\n",
              "      <td>0.384009</td>\n",
              "      <td>0.009155</td>\n",
              "      <td>0.293444</td>\n",
              "      <td>-0.092667</td>\n",
              "      <td>-0.281450</td>\n",
              "      <td>-0.008705</td>\n",
              "      <td>-0.461041</td>\n",
              "      <td>-0.129784</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-61912597-f4dc-4147-8a01-282b22446dce')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-61912597-f4dc-4147-8a01-282b22446dce button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-61912597-f4dc-4147-8a01-282b22446dce');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 66
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "y = datauas['chamber']\n",
        "y.head"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "Qsamid3B83oM",
        "outputId": "24fdf30b-87d8-46b6-e6c7-6242fc66ad75"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "<bound method NDFrame.head of 0       House\n",
              "1      Senate\n",
              "2       House\n",
              "3      Senate\n",
              "4       House\n",
              "        ...  \n",
              "139    Senate\n",
              "140     House\n",
              "141    Senate\n",
              "142     House\n",
              "143    Senate\n",
              "Name: chamber, Length: 125, dtype: object>"
            ]
          },
          "metadata": {},
          "execution_count": 67
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.4, random_state=10)\n",
        "\n",
        "print('training dataset')\n",
        "print(X_train.shape)\n",
        "print(y_train.shape)\n",
        "print()\n",
        "print('testing dataset:')\n",
        "print(X_test.shape)\n",
        "print(y_test.shape)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "Lp29hciI8-bb",
        "outputId": "fcde7944-53a1-4658-a30b-99d3420aaaae"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "training dataset\n",
            "(75, 19)\n",
            "(75,)\n",
            "\n",
            "testing dataset:\n",
            "(50, 19)\n",
            "(50,)\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "from sklearn.preprocessing import StandardScaler\n",
        "\n",
        "scaler = StandardScaler()\n",
        "X_train = scaler.fit_transform(X_train)\n",
        "X_test = scaler.transform(X_test)"
      ],
      "metadata": {
        "id": "uue9T7eo_QXn"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "from sklearn.neighbors import KNeighborsClassifier"
      ],
      "metadata": {
        "id": "Y-feP0ng9sTi"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "k_range = list(range(1,26))\n",
        "scores = []\n",
        "for k in k_range:\n",
        "  model_knn = KNeighborsClassifier(n_neighbors=k)\n",
        "  model_knn.fit(X_train, y_train)\n",
        "  y_pred = model_knn.predict(X_test)\n",
        "  scores.append(accuracy_score(y_test, y_pred))"
      ],
      "metadata": {
        "id": "cAEJ1jb992dr"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "plt.plot(k_range, scores)\n",
        "plt.xlabel('value of K for KNN')\n",
        "plt.ylabel('Accuarcy Score')\n",
        "plt.title('Accuracy Scores for Value of k of k-Nearest-Neighbors')\n",
        "plt.tight_layout()\n",
        "plt.show()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 297
        },
        "id": "Y_f5yT0qDyfw",
        "outputId": "504283aa-afcb-4d69-dc26-cb1ba3a8f531"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "model_knn = KNeighborsClassifier(n_neighbors=3)\n",
        "model_knn.fit(X_train, y_train)\n",
        "y_pred = model_knn.predict(X_test)"
      ],
      "metadata": {
        "id": "j2lch_j2EUNB"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "print(accuracy_score(y_test, y_pred))"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "MhXCSdTbEpmd",
        "outputId": "674105a8-83fd-4f2e-f503-104bc2bdd500"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "0.98\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "print(confusion_matrix(y_test, y_pred))"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "5aybYfHxEwaF",
        "outputId": "bb9271fa-a549-4bc9-c86c-19adc9c4b430"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "[[31  0]\n",
            " [ 1 18]]\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "print(classification_report(y_test, y_pred))"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "CpDEPiqbE4RK",
        "outputId": "23fee5a9-3b0f-44fd-d6ba-757deec5c3e3"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "              precision    recall  f1-score   support\n",
            "\n",
            "       House       0.97      1.00      0.98        31\n",
            "      Senate       1.00      0.95      0.97        19\n",
            "\n",
            "    accuracy                           0.98        50\n",
            "   macro avg       0.98      0.97      0.98        50\n",
            "weighted avg       0.98      0.98      0.98        50\n",
            "\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "from sklearn.linear_model import LogisticRegression"
      ],
      "metadata": {
        "id": "UlfUhUkBE-uz"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "model_logreg = LogisticRegression(solver='lbfgs', multi_class='auto')\n",
        "model_logreg.fit(X_train,y_train)\n",
        "y_pred = model_logreg.predict(X_test)\n"
      ],
      "metadata": {
        "id": "u_1-y-mIFF9s"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "print(accuracy_score(y_test,y_pred))"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "RW56oLWiHBbS",
        "outputId": "a52403fe-eb3b-4ae1-8eaa-061fa76b5f6f"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "0.82\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "print(classification_report(y_test, y_pred))"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "hsuv5UVnHIpm",
        "outputId": "e012bd44-b2b5-42d5-f0aa-b61cc4b82261"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "              precision    recall  f1-score   support\n",
            "\n",
            "       House       0.84      0.87      0.86        31\n",
            "      Senate       0.78      0.74      0.76        19\n",
            "\n",
            "    accuracy                           0.82        50\n",
            "   macro avg       0.81      0.80      0.81        50\n",
            "weighted avg       0.82      0.82      0.82        50\n",
            "\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "print(confusion_matrix(y_test, y_pred))"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "64Zf4O0HQez2",
        "outputId": "66d34178-4bde-475d-842e-6d759ade8b1d"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "[[30  1]\n",
            " [ 0 19]]\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "from sklearn.svm import SVC"
      ],
      "metadata": {
        "id": "XprMage5HUtx"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "model_svc=SVC(gamma='scale')\n",
        "model_svc.fit(X_train,y_train)\n",
        "y_pred = model_svc.predict(X_test)\n"
      ],
      "metadata": {
        "id": "POTzqa2UHaNQ"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "print(confusion_matrix(y_test, y_pred))"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "C9Ksl5Z4Qgy7",
        "outputId": "1383e9cf-7054-45a5-e5ec-635d1032a886"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "[[30  1]\n",
            " [ 0 19]]\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "print(accuracy_score(y_test,y_pred))"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "LTikNQSfQWUt",
        "outputId": "b7ec4237-9fcd-4561-f732-a3ebfc4a078b"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "0.98\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "print(classification_report(y_test, y_pred))"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "XhwHaim8QaAN",
        "outputId": "93cc813e-49c6-49b6-ac08-1eb8bf395d8e"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "              precision    recall  f1-score   support\n",
            "\n",
            "       House       1.00      0.97      0.98        31\n",
            "      Senate       0.95      1.00      0.97        19\n",
            "\n",
            "    accuracy                           0.98        50\n",
            "   macro avg       0.97      0.98      0.98        50\n",
            "weighted avg       0.98      0.98      0.98        50\n",
            "\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "from sklearn.tree import DecisionTreeClassifier"
      ],
      "metadata": {
        "id": "Je8YjCt2HocF"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "model_dt=DecisionTreeClassifier()\n",
        "model_dt.fit(X_train, y_train)\n",
        "y_pred = model_dt.predict(X_test)"
      ],
      "metadata": {
        "id": "JdqXgLn2IEli"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "print(confusion_matrix(y_test, y_pred))"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "LLUICd_DQiTX",
        "outputId": "931bdcd0-795b-4898-cea7-8121f6600143"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "[[30  1]\n",
            " [ 0 19]]\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "print(accuracy_score(y_test,y_pred))"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "beJexW_2QOV1",
        "outputId": "cd34cc19-8886-4743-d1b9-0c249b636c5a"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "0.98\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "print(classification_report(y_test, y_pred))"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "ncWumzXSPjup",
        "outputId": "e2fb5bda-ef8d-47b9-f488-9416570998b0"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "              precision    recall  f1-score   support\n",
            "\n",
            "       House       1.00      0.97      0.98        31\n",
            "      Senate       0.95      1.00      0.97        19\n",
            "\n",
            "    accuracy                           0.98        50\n",
            "   macro avg       0.97      0.98      0.98        50\n",
            "weighted avg       0.98      0.98      0.98        50\n",
            "\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "from sklearn.ensemble import RandomForestClassifier"
      ],
      "metadata": {
        "id": "u0DdOsjZITAR"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "model_rf=RandomForestClassifier(n_estimators=100)\n",
        "model_rf.fit(X_train, y_train)\n",
        "y_pred = model_rf.predict(X_test)\n"
      ],
      "metadata": {
        "id": "0fGaB6NgI0RW"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "print(confusion_matrix(y_test, y_pred))"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "6cfOzZdlQlId",
        "outputId": "ba4eed15-a035-4058-aa1a-08c7b2233568"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "[[30  1]\n",
            " [ 0 19]]\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "print(accuracy_score(y_test,y_pred))"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "yVi5nYc_QR4x",
        "outputId": "abc53366-bfc2-46a7-93b0-a78a363a6f89"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "0.98\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "print(classification_report(y_test, y_pred))"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "jWapS9taPYWv",
        "outputId": "477e3a5b-2c5d-4f18-df3f-69156d324065"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "              precision    recall  f1-score   support\n",
            "\n",
            "       House       1.00      0.97      0.98        31\n",
            "      Senate       0.95      1.00      0.97        19\n",
            "\n",
            "    accuracy                           0.98        50\n",
            "   macro avg       0.97      0.98      0.98        50\n",
            "weighted avg       0.98      0.98      0.98        50\n",
            "\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "models = [model_knn, model_logreg, model_svc, model_dt, model_rf]\n",
        "accuracy_scores = []\n",
        "for model in models:\n",
        "  y_pred = model.predict(X_test)\n",
        "  accuracy = accuracy_score(y_test, y_pred)\n",
        "  accuracy_scores.append(accuracy)\n",
        "\n",
        "print(accuracy_scores)  "
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "ZQftDBbLJGD1",
        "outputId": "aded2703-22ad-45b9-8033-3483a0d772ce"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "[0.98, 0.82, 0.98, 0.96, 0.98]\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "plt.bar(['KNN', 'LogReg', 'SVC', 'DT', 'RF'], accuracy_scores)\n",
        "plt.ylim(0.80,1.01)\n",
        "plt.title('Accuracy comparison for various models', fontsize=15, color='b')\n",
        "plt.xlabel('Models', fontsize=18, color='b')\n",
        "plt.tight_layout()\n",
        "plt.show()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 297
        },
        "id": "1PUxue9eKsUc",
        "outputId": "b0066203-686f-44d2-e0ba-52d33b11b4b5"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {
            "needs_background": "light"
          }
        }
      ]
    }
  ]
}